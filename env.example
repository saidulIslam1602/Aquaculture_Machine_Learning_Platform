# ============================================================================
# Aquaculture ML Platform - Environment Configuration Template
# ============================================================================
# 
# Copy this file to create environment-specific configurations:
# - .env.development (for local development)
# - .env.staging (for staging environment)  
# - .env.production (for production deployment)
#
# SECURITY WARNING: Never commit actual .env files to version control!
# ============================================================================

# ============================================================================
# APPLICATION CONFIGURATION
# ============================================================================
ENVIRONMENT=production
DEBUG=false
LOG_LEVEL=INFO
API_HOST=0.0.0.0
API_PORT=8000

# Project Information
PROJECT_NAME="Aquaculture ML Platform"
VERSION=1.0.0
DESCRIPTION="Production-grade ML platform for fish classification"

# ============================================================================
# DATABASE CONFIGURATION (Multi-Cloud Compatible)
# ============================================================================

# PostgreSQL (Recommended for multi-cloud)
DATABASE_URL=postgresql://username:password@hostname:5432/database_name
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=10

# Alternative: SQL Server (Azure SQL Database / AWS RDS SQL Server)
# SQLSERVER_URL=mssql+pyodbc://username:password@hostname:1433/database_name?driver=ODBC+Driver+17+for+SQL+Server

# Alternative: MySQL (AWS RDS MySQL / Azure Database for MySQL / GCP Cloud SQL)
# MYSQL_URL=mysql+pymysql://username:password@hostname:3306/database_name

# ============================================================================
# CACHE & MESSAGE BROKER CONFIGURATION
# ============================================================================

# Redis (Multi-cloud compatible)
REDIS_URL=redis://hostname:6379/0
REDIS_MAX_CONNECTIONS=50

# Kafka (Multi-cloud compatible)
KAFKA_BOOTSTRAP_SERVERS=hostname:9092
KAFKA_TOPIC_PREDICTIONS=fish-predictions

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================

# Generate secure keys with: openssl rand -base64 32
SECRET_KEY=CHANGE_THIS_TO_A_SECURE_RANDOM_STRING_IN_PRODUCTION
JWT_SECRET=CHANGE_THIS_TO_ANOTHER_SECURE_RANDOM_STRING
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=24
ACCESS_TOKEN_EXPIRE_MINUTES=1440

# ============================================================================
# CLOUD PROVIDER SPECIFIC CONFIGURATIONS
# ============================================================================

# AWS Configuration
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_S3_BUCKET=aquaculture-ml-models
AWS_RDS_ENDPOINT=your-rds-endpoint.amazonaws.com

# Azure Configuration
AZURE_SUBSCRIPTION_ID=your_subscription_id
AZURE_RESOURCE_GROUP=aquaculture-ml-rg
AZURE_SQL_SERVER=your-sql-server.database.windows.net
AZURE_STORAGE_ACCOUNT=aquaculturemlstorage

# Google Cloud Configuration
GCP_PROJECT_ID=your-project-id
GCP_REGION=us-central1
GCP_SQL_INSTANCE=aquaculture-ml-db
GCP_STORAGE_BUCKET=aquaculture-ml-models

# ============================================================================
# ML MODEL CONFIGURATION
# ============================================================================
MODEL_PATH=/app/models/fish_classifier_v1.pth
BATCH_SIZE=32
CONFIDENCE_THRESHOLD=0.5
INFERENCE_DEVICE=cpu
MAX_FILE_SIZE=10485760

# Model Storage (Cloud-specific)
# AWS: s3://bucket-name/models/
# Azure: https://account.blob.core.windows.net/container/models/
# GCP: gs://bucket-name/models/
MODEL_STORAGE_URL=s3://aquaculture-ml-models/models/

# ============================================================================
# MONITORING & OBSERVABILITY
# ============================================================================
PROMETHEUS_ENABLED=true
GRAFANA_ENABLED=true
JAEGER_ENABLED=true

# Monitoring endpoints (cloud-specific)
PROMETHEUS_URL=http://prometheus:9090
GRAFANA_URL=http://grafana:3000
JAEGER_URL=http://jaeger:16686

# ============================================================================
# CORS CONFIGURATION
# ============================================================================
CORS_ORIGINS=["https://yourdomain.com","https://app.yourdomain.com"]
CORS_ALLOW_CREDENTIALS=true
CORS_ALLOW_METHODS=["GET","POST","PUT","DELETE","OPTIONS"]
CORS_ALLOW_HEADERS=["*"]

# ============================================================================
# RATE LIMITING
# ============================================================================
RATE_LIMIT_PER_MINUTE=100
RATE_LIMIT_BURST=20

# ============================================================================
# FILE UPLOAD CONFIGURATION
# ============================================================================
UPLOAD_DIR=/app/uploads
MAX_FILE_SIZE=10485760
ALLOWED_EXTENSIONS=["jpg","jpeg","png","gif","webp"]

# ============================================================================
# EXTERNAL SERVICES (Optional)
# ============================================================================

# Email Service (SendGrid, AWS SES, etc.)
SENDGRID_API_KEY=your_sendgrid_api_key
EMAIL_FROM=noreply@yourdomain.com

# Slack Notifications
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# ============================================================================
# DEVELOPMENT SPECIFIC (Only for .env.development)
# ============================================================================
# Uncomment for development environment
# DEBUG=true
# LOG_LEVEL=DEBUG
# DATABASE_URL=postgresql://aquaculture:aquaculture123@localhost:5432/aquaculture_db
# REDIS_URL=redis://localhost:6379/0
# KAFKA_BOOTSTRAP_SERVERS=localhost:9092
