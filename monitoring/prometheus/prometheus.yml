# Enhanced Prometheus Configuration for Aquaculture ML Platform
# Production-ready monitoring with comprehensive metrics collection

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'aquaculture-ml-platform'
    environment: 'production'
    datacenter: 'primary'

# Rule files for alerting
rule_files:
  - "rules/api_alerts.yml"
  - "rules/infrastructure_alerts.yml"
  - "rules/business_alerts.yml"
  - "rules/ml_model_alerts.yml"
  - "rules/sla_alerts.yml"
  - "rules/security_alerts.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      timeout: 10s
      api_version: v2
      path_prefix: /
      scheme: http

# Enhanced scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 15s
    metrics_path: '/metrics'
    honor_labels: true

  # Aquaculture API Service (Enhanced)
  - job_name: 'aquaculture-api'
    static_configs:
      - targets: ['api:8000']
    metrics_path: '/metrics'
    scrape_interval: 5s
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'http_.*'
        target_label: component
        replacement: 'api'
      - source_labels: [__name__]
        regex: 'fastapi_.*'
        target_label: component
        replacement: 'api'

  # ML Service Monitoring
  - job_name: 'aquaculture-ml-service'
    static_configs:
      - targets: ['ml-service:8001']
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 15s
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'model_.*'
        target_label: component
        replacement: 'ml'

  # Worker Service (Celery)
  - job_name: 'aquaculture-worker'
    static_configs:
      - targets: ['worker:9540']  # Celery exporter
    metrics_path: '/metrics'
    scrape_interval: 30s

  # PostgreSQL Database
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    scrape_timeout: 10s
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'pg_.*'
        target_label: component
        replacement: 'database'

  # Redis Cache
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'redis_.*'
        target_label: component
        replacement: 'cache'

  # Kafka Message Broker
  - job_name: 'kafka'
    static_configs:
      - targets: ['kafka-exporter:9308']
    scrape_interval: 30s
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'kafka_.*'
        target_label: component
        replacement: 'messaging'

  # Node Exporter (System Metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'node_.*'
        target_label: component
        replacement: 'infrastructure'

  # cAdvisor (Container Metrics)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 15s
    metrics_path: '/metrics'
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'container_.*'
        target_label: component
        replacement: 'containers'

  # Grafana Monitoring
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Jaeger Tracing
  - job_name: 'jaeger'
    static_configs:
      - targets: ['jaeger:14269']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # NGINX Load Balancer
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:9113']  # nginx-prometheus-exporter
    scrape_interval: 30s
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'nginx_.*'
        target_label: component
        replacement: 'loadbalancer'

  # Custom Business Metrics
  - job_name: 'business-metrics'
    static_configs:
      - targets: ['api:8000']
    metrics_path: '/business-metrics'
    scrape_interval: 60s
    honor_labels: true

# Remote write configuration for long-term storage (optional)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint/api/v1/write"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500

# Storage configuration is now handled via command line args in docker-compose.yml